#!/bin/bash
#SBATCH --partition=batch
#SBATCH --nodes=1
#SBATCH --ntasks=11
#SBATCH --mem-per-cpu=4000
#SBATCH --job-name="MegaCC"
#SBATCH --output=MegaCC_job_%j.out

# for calculating the amount of time the job takes
begin=$(date +%s)

# Some job specific info
echo "Job ID is = " "$SLURM_JOBID"
echo "SLURM cluster name = " "$SLURM_CLUSTER_NAME"
echo "SLURM partition = " "$SLURM_JOB_PARTITION"
echo "SLURM node list = " "$SLURM_JOB_NODELIST"
echo "SLURM num of nodes = " "$SLURM_JOB_NUM_NODES"
echo "SLURM number of tasks = " "$SLURM_NTASKS"
echo "SLURM memory per node = " "$SLURM_MEM_PER_NODE"
echo "SLURM memory per cpu = " "$SLURM_MEM_PER_CPU"
echo "working directory = " "$SLURM_SUBMIT_DIR"
echo "=================================================="
echo "SBATCÎ— job started " "$(date)"
echo "=================================================="
echo


generalInfo () {
    cat <<END

	This script runs in the MegaCC directory found in $SLURM_SUBMIT_DIR.
	In order to run it:
	sbatch $0 
	
	NOTE:
	Here we want to create a newick tree file, which will be used as a treefile input in CodeML (part of PAML) .
 
	IMPORTANT:
	We have created the .mao file with the GUI version of Mega, as instructed in the MegaCC manual.

	IMPORTANT:
	The number of tasks given to SLURM have to be equal to the number of genes in the array, because srun runs each of them in a single core!

END
}


# INITIAL PARAMETERS
MegaCCDir=${HOME}/Software/megacc_10.0.5
MSADir=${HOME}/Pseudomonas/Anvio/Phylogenomics/Final_Selected_genes
MaoFile=infer_ML_amino_acid.mao

# We will use the exact same .mao file for all our MSAs. 
cat > infer_ML_amino_acid.mao <<"EOF"
; Please do not edit this file! If this file is modified, results are unpredictable.
; Instead of modifying this file, simply create a new MEGA Analysis Options file by using MEGA.
[ MEGAinfo ]
ver                                  = 10180924-x86_64 Linux               
[ DataSettings ]
datatype                             = snProtein                           
MissingBaseSymbol                    = ?                                   
IdenticalBaseSymbol                  = .                                   
GapSymbol                            = -                                   
[ ProcessTypes ]
ppInfer                              = true                                
ppML                                 = true                                
[ AnalysisSettings ]
Analysis                             = Phylogeny Reconstruction            
Statistical Method                   = Maximum Likelihood                  
Phylogeny Test                       = ====================                
Test of Phylogeny                    = None                                
No. of Bootstrap Replications        = Not Applicable                      
Substitution Model                   = ====================                
Substitutions Type                   = Amino acid                          
Model/Method                         = JTT with Freqs. (+F) model          
Rates and Patterns                   = ====================                
Rates among Sites                    = Gamma Distributed With Invariant Sites (G+I)
No of Discrete Gamma Categories      = 5                                   
Data Subset to Use                   = ====================                
Gaps/Missing Data Treatment          = Partial deletion                    
Site Coverage Cutoff (%)             = 80                                  
Tree Inference Options               = ====================                
ML Heuristic Method                  = Subtree-Pruning-Regrafting - Extensive (SPR level 5)
Initial Tree for ML                  = Make initial tree automatically (Default - NJ/BioNJ)
Branch Swap Filter                   = Very Strong                         
System Resource Usage                = ====================                
Number of Threads                    = 1                                   
Has Time Limit                       = False                               
Maximum Execution Time               = -1 
EOF






# Next, we set an array with all the gene names we have so far.
declare -a arr=("POG09090273" "POG090903FS"
		"POG090902FY" "POG0909018I"
		"POG090901ND" "POG090900GE"
		"POG090901XJ" "POG0909006H"
		"POG090903B5" "POG090901S2"
		"POG090902JS"
		)



for i in "${arr[@]}"
do
    
    GuidanceMSA=${i}_Guidance_ColFiltered.fas
    if [[ ! -e ${MSADir}/${GuidanceMSA} ]]; then
        echo "${GuidanceMSA} cannot be found in ${MSADir}. Please upload it and run again this script!" >&2
    else
        ln -s ${MSADir}/${GuidanceMSA}
        # This is the ML tree construction.
        ${HOME}/srun --ntasks=1 ${MegaCCDir}/megacc -a infer_ML_amino_acid.mao -d ${GuidanceMSA} -o ${i}_ML_MegaCC &
        sleep 1
    fi

done

# We have to wait for all the background processes to finish.
wait


# This is the NJ tree construction.
# ${MegaCCDir}/megacc -a infer_NJ_amino_acid.mao -d /home1/pbravakos/Pseudomonas/Anvio/Phylogenomics/Final_Selected_genes/POG0909006H_Guidance_ColFiltered.fas -o POG0909006H_NJ_MegaCC






echo "==============================="
echo "SLURM job finished " `date`
echo

# finished commands

# getting end time to calculate time elapsed
end=`date +%s`
elapsed=`expr $end - $begin`
echo Time taken: `printf '%dh:%dm:%ds\n' $(($elapsed/3600)) $(($elapsed%3600/60)) $(($elapsed%60))`

exit 0
